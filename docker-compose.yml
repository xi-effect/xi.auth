services:
  redis:
    image: redis:7.4.2-alpine
    command: /etc/redis/redis.conf
    volumes:
      - type: tmpfs
        target: /data
      - type: bind
        source: redis.conf
        target: /etc/redis/redis.conf
    ports:
      - target: 6379
        host_ip: 127.0.0.1
        published: 5800
    healthcheck:
      test: "redis-cli ping | grep PONG"
      start_period: 60s
      interval: 10s
      timeout: 60s
      retries: 5

  mq:
    image: rabbitmq:3.12.10-management-alpine
    volumes:
      - type: tmpfs
        target: /var/lib/rabbitmq/
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q check_port_connectivity
      start_period: 60s
      interval: 10s
      timeout: 60s
      retries: 5

  db:
    image: postgres:16.1-alpine
    environment:
      PGUSER: test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
      # POSTGRES_EXTENSIONS: pg_trgm
    volumes:
      - type: tmpfs
        target: /var/lib/postgresql/data
      - type: bind
        source: ./init-schema.sql
        target: /docker-entrypoint-initdb.d/init-schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "test", "-U", "test"]
      start_period: 60s
      interval: 10s
      timeout: 60s
      retries: 5

  alembic:
    profiles:
      - migration
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./alembic
        target: /backend/alembic
      - type: bind
        source: ./alembic.ini
        target: /backend/alembic.ini
    environment:
      postgres_host: db:5432
      postgres_username: test
      postgres_password: test
      postgres_database: test
      postgres_schema: xi_auth
    entrypoint: sh

  api:
    profiles:
      - app
    depends_on:
      redis:
        condition: service_healthy
      mq:
        condition: service_healthy
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command:
      - "--reload"
    ports:
      - "5100:8000"
    volumes:
      - ./app:/backend/app
      - ./tests:/backend/tests
    environment:
      WATCHFILES_FORCE_POLLING: true
      postgres_username: test
      postgres_password: test
      postgres_database: test
      postgres_schema: xi_auth
      # postgres_automigrate: false
      mq_host: localhost
      mq_port: 5672
      mq_username: guest
      mq_password: guest
      vacancy_webhook_url: https://discord.com/api/webhooks/1217785134657568808/0A3tBqexVzpWtoqW0PZYfVcE6guRe3nC1NX-NLnZr8Tsbcu1jOD8_S8VBIkB8LL_Lveh
      REDIS_URL: redis://redis:6379
